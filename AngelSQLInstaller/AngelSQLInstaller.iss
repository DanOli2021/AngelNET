; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "AngelSQL"
#define MyAppVersion "0.9"
#define MyAppPublisher "Daniel Oliver Rojas"
#define MyAppURL "https:/angelsql.net/"
#define MyAppExeName "AngelSQLServer.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".angel"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

//Agregamos la librería que nos instalará NET 7 en caso de que no este instalado.  
#define public Dependency_NoExampleSetup

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{67F1EAE5-FBB6-4865-8C44-3FF4AD975107}
AppName={#MyAppName}
AppVersion={#MyAppVersion}                                                                                                                       
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=c:\AngelSQLNet\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
LicenseFile=C:\Desarrollo\AngelNET\AngelSQLServer\bin\Release\net7.0\publish\EULA.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=AngelSQLSetup
SetupIconFile=C:\Desarrollo\AngelNET\Art\AngelSQL1.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "C:\Desarrollo\AngelNET\AngelSQLServer\bin\Release\net7.0\publish\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Desarrollo\AngelNET\AngelSQLServer\bin\Release\net7.0\publish\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Desarrollo\AngelNET\AngelSQLInstaller\dotnet-runtime-7.0.5-win-x64.exe"; DestDir: "{app}\netruntime"; Flags: ignoreversion 
Source: "C:\Desarrollo\AngelNET\AngelSQLInstaller\aspnetcore-runtime-7.0.5-win-x64.exe"; DestDir: "{app}\netruntime"; Flags: ignoreversion 

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]                                                                            
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

Name: "{autoprograms}\AngelDB"; Filename: "{app}\db.exe"
Name: "{autodesktop}\AngelDB"; Filename: "{app}\db.exe"; Tasks: desktopicon

[Run]
Filename: "{app}\netruntime\dotnet-runtime-7.0.5-win-x64.exe"; Parameters: "/passive /norestart"; Description: "Install dotnet runtime 7.0.0"; Flags: shellexec waituntilterminated
Filename: "{app}\netruntime\aspnetcore-runtime-7.0.5-win-x64.exe"; Parameters: "/passive /norestart"; Description: "Install aspnetcore 7.0.0"; Flags: shellexec waituntilterminated


[Code]
procedure CurStepChanged(CurStep: TSetupStep);
var
  SourcePath: string;
  DestPath: string;
begin
  if CurStep = ssInstall then
  begin
    // Verificar si los archivos .txt existen en el directorio de destino
    SourcePath := ExpandConstant('{src}');
    DestPath := ExpandConstant('{app}\');

    if not FileExists(DestPath + '*.csx') then
    begin
      // Copiar los archivos .txt si no existen
      FileCopy(SourcePath + '*.csx', DestPath, False);
    end;
  end;
end;